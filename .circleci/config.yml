# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

commands:
  restore_cache_cmd:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

  save_cache_cmd:
    steps:
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

  sonar-scan:
    steps:
      - checkout # check out source code to working directory
      - restore_cache_cmd
      - run:
          name: Sonar Scan
          command: |
            sudo chmod +x ./mvnw
            ./mvnw verify sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY
      - save_cache_cmd

  unit-test:
    steps:
      - checkout # check out source code to working directory
      - restore_cache_cmd
      - run:
          name: JUnit testing
          command: |
            sudo chmod +x ./mvnw
            ./mvnw test
      - store_artifacts:
          path: target
      - codecov/upload:
          file: './target/site/jacoco/jacoco.xml'
          token: $CODECAV_TOKEN
      - save_cache_cmd

  deploy:
    steps:
      - checkout # check out source code to working directory
      - restore_cache_cmd
      - run:
          name: Deploy to Nexus
          command: |
            sudo chmod +x ./mvnw
            ./mvnw deploy
      - save_cache_cmd

  publish-docker:
    steps:
      - checkout # check out source code to working directory
      - restore_cache_cmd
      - run: sudo chmod +x ./mvnw
      - run: ./mvnw dependency:go-offline
      - run: cp .mvn/wrapper/settings.xml ~/.m2/settings.xml
      - run: echo "<settingsSecurity><master>${MAVEN_SECURITY_MASTER}</master></settingsSecurity>" > ~/.m2/settings-security.xml
      - run:
          name: Create and publish Docker image to the Docker Hub repository with jib plugin
          command: |
            ./mvnw compile jib:build -Djib.to.auth.password=${RPS_DOCKER_HUB_TOKEN} -Pdocker -B -DskipTests=true \
                                              -Dbuild.number=${CIRCLE_BUILD_NUM} \
                                              -Dcommit.hash=${CIRCLE_SHA1} \
                                              -Dcircle.workflow.guid=${CIRCLE_WORKFLOW_ID} \
                                              -Dbuild.user=${CIRCLE_PROJECT_USERNAME} \
                                              -Dbuild.repo=${CIRCLE_PROJECT_REPONAME}
      - save_cache_cmd

  build:
    steps:
      - checkout
      - restore_cache_cmd
      - run:
          name: Package application
          command: |
            sudo chmod +x ./mvnw
            ./mvnw -Dmaven.test.skip=true package
      - save_cache_cmd

executors:
  docker-executor:
    docker:
      - image: circleci/openjdk:11-jdk # with this image as the primary container; this is where all `steps` will run
  machine-executor:
    machine:
      image: ubuntu-1604:201903-01

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  build-with-docker:
    executor: docker-executor
    steps:
      - build

  test-with-docker:
    executor: docker-executor
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - unit-test
      - sonar-scan

  publish-with-docker:
    executor: docker-executor
    steps:
      - publish-docker

  deploy-with-docker:
    executor: docker-executor
    steps:
      - deploy

  build-with-machine:
    executor: machine-executor
    steps:
      - run:
          name: Install OpenJDK 11
          command: |
            sudo apt-get update && sudo apt-get install openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
            java -version
      - build

  test-with-machine:
    executor: machine-executor
    steps:
      - run:
          name: Install OpenJDK 11
          command: |
            sudo apt-get update && sudo apt-get install openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
            java -version
      - unit-test
      - sonar-scan

  publish-with-machine:
    executor: machine-executor
    steps:
      - publish-docker

  deploy-with-machine:
    executor: machine-executor
    steps:
      - deploy

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-then-test-with-docker:
    jobs:
      - build-with-docker
      - test-with-docker:
          requires:
            - build-with-docker
          context: SonarCloud
      - publish-with-docker:
          requires:
            - test-with-docker

  build-then-test-with-machine:
    jobs:
      - build-with-machine
      - test-with-machine:
          requires:
            - build-with-machine
          context: SonarCloud
      - publish-with-machine:
          requires:
            - test-with-machine
